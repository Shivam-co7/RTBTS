<!-- <html> -->

<head>
    <title>RTBTS MAPS</title>
    <link rel="stylesheet" type="text/css" href="https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.23.0/maps/maps.css" />
    <script src="https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.23.0/maps/maps-web.min.js"></script>
</head>

<!-- <body style=" background: linear-gradient(to right, #EF32D9, #89FFFD);"> -->

    <div><button id="find-me" onclick="geoFindMe();" style="margin: 10% 0 0 42%; background: black; color: white;">Show my location</button>
        <button id="okCheck" style="margin-left: 5%; display:none; background: seagreen; color: white;">OK!</button><br />
         
        
        <p id="status"></p>
        <a id="map-link" target="_blank"></a>
    </div>
    <center><div id="map" style = "z-index: 100000000; position: absolute; margin-bottom: 100px; background: #000; border: 2px solid red; min-height: 60%; min-width: 50%; margin: 1% 0 0 17%;"></div></center>


    <script>

        function geoFindMe() {

            const status = document.querySelector('#status');
            const mapLink = document.querySelector('#map-link');

            mapLink.href = '';
            mapLink.textContent = '';

            function success(position) {
                const latitude = position.coords.latitude;
                const longitude = position.coords.longitude;
                //tt center takes longitude then latitude as the parameter passing instead of latitude then longitude
                let center = [longitude, latitude];

                var map = tt.map({
                    key: "SVEFjR5fzjf840paBjrKqGRMYDazDeNF",
                    container: "map",
                    center: center,
                    zoom: 10
                });

                map.on('load', () => {
                    new tt.Marker().setLngLat(center).addTo(map)
                });

                // status.textContent = '';
                // mapLink.href = `https://www.openstreetmap.org/#map=18/${latitude}/${longitude}`;
                // mapLink.textContent = `Latitude: ${latitude} °, Longitude: ${longitude} °`;
                console.log(`Latitude: ${latitude} °, Longitude: ${longitude} °`);
            }

            function error() {
                status.textContent = 'Unable to retrieve your location';
            }

            if (!navigator.geolocation) {
                status.textContent = 'Geolocation is not supported by your browser';
            } else {
                status.textContent = 'Locating…';
                navigator.geolocation.getCurrentPosition(success, error);
            }

        }

        // document.querySelector('#find-me').addEventListener('click', geoFindMe);


        // Define the API key and initialize the map
const apiKey = 'SVEFjR5fzjf840paBjrKqGRMYDazDeNF';
const map = tt.map({
  key: apiKey,
  container: 'map',
  style: 'tomtom://vector/1/basic-main'
});

// Get the user's location using the geolocation API and center the map on it
function centerMapOnUserLocation() {
  if ('geolocation' in navigator) {
    navigator.geolocation.getCurrentPosition(
      position => {
        const { latitude, longitude } = position.coords;
        map.setCenter([longitude, latitude]);
        console.log("LAT & LONG = ");
        console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);
    },
    error => {
        console.error('Error getting current position:', error);
        let ok = document.getElementById('okCheck');
        ok.style.display = 'inline';
      }
    );
  } else {
    console.error('Geolocation is not supported by this browser.');
  }
}

// Call the centerMapOnUserLocation function to center the map on the user's location
centerMapOnUserLocation();
    </script>


